// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Board {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name     String
  image   Image[]
  description String
  user      String @map("userId")
  users     User[]
  Lists   List[]
}

model Image {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fileUrl     String
  fileKey     String
  boardId   String @map("boardId")
  board     Board @relation(fields: [boardId], references: [id])
}

model List {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name     String
  boardId   String @map("boardId")
  cards     Card[]
  board     Board @relation(fields: [boardId], references: [id])
}

model Card {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image  String?
  name     String
  description String
  listId   String @map("listId")
  list     List @relation(fields: [listId], references: [id])
  comments   Comments?
  user     String @map("userId")
}

model Comments {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      String @map("userId")
  text     String
  cardId   String @map("cardId")
  card     Card @relation(fields: [cardId], references: [id])
  @@unique([cardId])
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String @unique
  name     String
  password String
  boardId  String @map("boardId")
  board    Board @relation(fields: [boardId], references: [id])
}